{"version":3,"sources":["webpack:///./task-1.js","webpack:///./task-3.js","webpack:///./index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","makeTransaction","transaction","min","max","Math","floor","random","onSuccess","onError","id","logSuccess","logError","warn","amount","catch"],"mappings":"8EAAA,MAAMA,EAAQC,GACJ,IAAIC,QAAQC,IAClBC,WAAW,IAAID,EAAQF,GAAIA,KAIzBI,EAASC,GAAQC,QAAQC,IAAK,kBAAiBF,OAGrDN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ,I,qBCXjB,MAIMK,EAAmBC,IACvB,MAAMX,GAL2BY,EAKO,IALFC,EAKO,IAJtCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADpB,IAACA,EAAKC,EAMtC,OAAO,IAAIX,QAAQ,CAACe,EAAWC,KAC7Bd,WAAW,KACUU,KAAKE,SAAW,IAGjCC,EAAU,CAAEE,GAAIR,EAAYQ,GAAIb,KAAMN,IAGxCkB,EAAQP,EAAYQ,KACrBnB,MAMCoB,EAAa,EAAGD,KAAIb,WACxBC,QAAQC,IAAK,eAAcW,kBAAmBb,QAG1Ce,EAAYF,IAChBZ,QAAQe,KAAM,gCAA+BH,+BAK7CT,EAAgB,CAAES,GAAI,GAAII,OAAQ,MAC/Bd,KAAKW,GACLI,MAAMH,GAETX,EAAgB,CAAES,GAAI,GAAII,OAAQ,MAC/Bd,KAAKW,GACLI,MAAMH,GAETX,EAAgB,CAAES,GAAI,GAAII,OAAQ,KAC/Bd,KAAKW,GACLI,MAAMH,GAETX,EAAgB,CAAES,GAAI,GAAII,OAAQ,MAC/Bd,KAAKW,GACLI,MAAMH,I,yDC7CX,gD","file":"main.6a5c1a3741c486200d2e.js","sourcesContent":["const delay = ms => {\n   return new Promise(resolve => {\n    setTimeout(()=>resolve(ms),ms)\n  })\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n  const delay = randomIntegerFromInterval(200, 500);\n  return new Promise((onSuccess, onError) => {\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        onSuccess({ id: transaction.id, time: delay });\n      }\n    \n      onError(transaction.id); \n  }, delay);\n  \n});\n  \n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = (id) => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n\n\n  makeTransaction({ id: 70, amount: 150 })\n    .then(logSuccess)\n    .catch(logError);\n\n  makeTransaction({ id: 71, amount: 230 })\n    .then(logSuccess)\n    .catch(logError);\n\n  makeTransaction({ id: 72, amount: 75 })\n    .then(logSuccess)\n    .catch(logError);\n\n  makeTransaction({ id: 73, amount: 100 })\n    .then(logSuccess)\n    .catch(logError);\n\n\n\n","import './styles.css';\nimport './task-1';\nimport './task-2';\nimport './task-3';\n"],"sourceRoot":""}